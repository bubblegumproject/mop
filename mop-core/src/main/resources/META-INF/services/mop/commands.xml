<!--

     Copyright (C) 2009 Progress Software, Inc. All rights reserved.
     http://fusesource.com

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

-->
<commands>
  
  <command-class name="org.fusesource.mop.commands.Fork"/>
  <command-class name="org.fusesource.mop.commands.Install"/>
  <command-class name="org.fusesource.mop.commands.RepoConfig"/>
  <command-class name="org.fusesource.mop.commands.Shell"/>

  <command-class name="org.fusesource.mop.commands.CloudMixAgent"/>
  <command-class name="org.fusesource.mop.commands.CloudMixController"/>
  
  <command-class name="org.fusesource.mop.commands.Karaf"/>
  <command-class name="org.fusesource.mop.commands.ServiceMix"/>
  
  <command name="spring" alias="run ${artifacts} +org.fusesource.mop:mop-spring:LATEST org.fusesource.mop.spring.Main">
    <description>
      Runs the given artifact(s) by starting the XML application context specified as an argument or defaults to
      META-INF/spring/*.xml
    </description>
    <usage><![CDATA[ [<springXmlFile(s)>] ]]></usage>
  </command>

  <command name="guice" alias="run ${artifacts} org.fusesource.mop:mop-guice org.fusesource.mop.guice.Main">
    <description>
      Runs the given artifact(s) by starting a Guice injector and injecting all of the given modules listed on the
      command line
    </description>
    <usage><![CDATA[ [<guiceModuleClassName(s)>] ]]></usage>
  </command>

  <command name="war" alias="jar org.mortbay.jetty:jetty-runner:${version}">
    <description>
      runs the WAR artifact(s) using the Jetty Runner. You can use war:version to customize the jetty version used
    </description>
    <usage><![CDATA[ [<warArtifact(s)>] [<jettyArgument(s)>]]></usage>
  </command>

  <!--command name="karaf" alias="jar org.apache.felix:karaf-main ${artifacts}">
    <description>
      Starts an embedded Karaf container and deploys the given artifact(s) inside it
    </description>
    <usage><![CDATA[ [<bundleArtfacts(s)>] [<karafArg(s)>]]></usage>
  </command-->

  <command name="broker" alias="war org.apache.activemq:activemq-web-console:${version}">
    <description>
      Starts an Apache ActiveMQ broker along with the web console. You can use broker:version to specify the ActiveMQ
      version
    </description>
    <usage><![CDATA[ <jettyArgs(s)>]]></usage>
  </command>


  <!-- Camel examples -->
  <command name="camel-example-pojo" alias="run org.apache.camel:camel-example-pojo-messaging:${version} org.apache.camel.spring.Main">
    <description>
      Runs the Apache Camel POJO Messaging Example. For more see: http://camel.apache.org/pojo-messaging-example.html
    </description>
    <usage><![CDATA[ <args(s)> ]]></usage>
  </command>

</commands>
